  TDSineEstimation.cpp
e:\users\allfather\projects\nemesis\nemesis\random.hpp(5): warning C4244: 'argument': conversion from 'time_t' to 'unsigned int', possible loss of data
e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(14): warning C4244: 'argument': conversion from 'time_t' to 'unsigned int', possible loss of data
e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(15): warning C4305: 'argument': truncation from 'double' to 'float'
e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(33): warning C4305: 'argument': truncation from 'double' to 'float'
e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(34): warning C4305: 'argument': truncation from 'double' to 'float'
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(81): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(74): note: while compiling class template member function 'void MLP<float,float,float>::append_layer(Layer<WeightType>)'
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(22): note: see reference to function template instantiation 'void MLP<float,float,float>::append_layer(Layer<WeightType>)' being compiled
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\model\tdlearner.hpp(7): note: see reference to class template instantiation 'MLP<float,float,float>' being compiled
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(83): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(50): warning C4305: 'initializing': truncation from 'double' to 'float'
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(45): note: while compiling class template member function 'MLP<float,float,float>::MLP(std::size_t,std::size_t)'
  e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(19): note: see reference to function template instantiation 'MLP<float,float,float>::MLP(std::size_t,std::size_t)' being compiled
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(51): warning C4305: 'initializing': truncation from 'double' to 'float'
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(31): warning C4018: '<': signed/unsigned mismatch
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(30): note: while compiling class template member function 'Layer<WeightType> &Layer<WeightType>::add(std::size_t,Activation<WeightType>)'
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(23): note: see reference to function template instantiation 'Layer<WeightType> &Layer<WeightType>::add(std::size_t,Activation<WeightType>)' being compiled
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(22): note: see reference to class template instantiation 'Layer<WeightType>' being compiled
          with
          [
              WeightType=float
          ]
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(142): warning C4018: '<': signed/unsigned mismatch
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(131): note: while compiling class template member function 'double MLP<float,float,float>::backpropagate(std::vector<OutputType,std::allocator<_Ty>>,std::vector<_Ty,std::allocator<_Ty>>,float)'
          with
          [
              OutputType=float,
              _Ty=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(181): note: see reference to function template instantiation 'double MLP<float,float,float>::backpropagate(std::vector<OutputType,std::allocator<_Ty>>,std::vector<_Ty,std::allocator<_Ty>>,float)' being compiled
          with
          [
              OutputType=float,
              _Ty=float
          ]
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(151): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(153): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(160): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(164): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(165): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(106): warning C4018: '<': signed/unsigned mismatch
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(97): note: while compiling class template member function 'std::array<std::vector<std::vector<OutputType,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>,2> MLP<float,OutputType,float>::propagate(std::vector<_Ty,std::allocator<_Ty>>,float)'
          with
          [
              OutputType=float,
              _Ty=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(177): note: see reference to function template instantiation 'std::array<std::vector<std::vector<OutputType,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>,2> MLP<float,OutputType,float>::propagate(std::vector<_Ty,std::allocator<_Ty>>,float)' being compiled
          with
          [
              OutputType=float,
              _Ty=float
          ]
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(114): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(120): warning C4018: '<': signed/unsigned mismatch
e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(121): warning C4018: '<': signed/unsigned mismatch
c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits(1468): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(213): note: see reference to function template instantiation '_Rx std::_Invoke_ret<_Rx,_Callable&,_Ty>(std::_Forced<_Rx,false>,_Callable &,_Ty &&)' being compiled
          with
          [
              _Rx=float,
              _Callable=_Decayed,
              _Ty=float
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(211): note: while compiling class template member function 'float std::_Func_impl<_Decayed,_Alloc,_Ret,WeightType>::_Do_call(WeightType &&)'
          with
          [
              _Alloc=std::allocator<int>,
              _Ret=float,
              WeightType=float
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(137): note: see reference to class template instantiation 'std::_Func_impl<_Decayed,_Alloc,_Ret,WeightType>' being compiled
          with
          [
              _Alloc=std::allocator<int>,
              _Ret=float,
              WeightType=float
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(348): note: see reference to class template instantiation 'std::_Is_large<_Myimpl>' being compiled
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(327): note: see reference to function template instantiation 'void std::_Func_class<_Ret,WeightType>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)' being compiled
          with
          [
              _Ret=float,
              WeightType=float,
              _Ty=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,
              _Alloc=std::allocator<int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(327): note: see reference to function template instantiation 'void std::_Func_class<_Ret,WeightType>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)' being compiled
          with
          [
              _Ret=float,
              WeightType=float,
              _Ty=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,
              _Alloc=std::allocator<int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(498): note: see reference to function template instantiation 'void std::_Func_class<_Ret,WeightType>::_Reset<LogisticActivation<WeightType>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>>(_Fx &&)' being compiled
          with
          [
              _Ret=float,
              WeightType=float,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(498): note: see reference to function template instantiation 'void std::_Func_class<_Ret,WeightType>::_Reset<LogisticActivation<WeightType>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>>(_Fx &&)' being compiled
          with
          [
              _Ret=float,
              WeightType=float,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(562): note: see reference to function template instantiation 'std::function<WeightType (WeightType)>::function<LogisticActivation<WeightType>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,double,void>(_Fx)' being compiled
          with
          [
              WeightType=float,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\functional(562): note: see reference to function template instantiation 'std::function<WeightType (WeightType)>::function<LogisticActivation<WeightType>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,double,void>(_Fx)' being compiled
          with
          [
              WeightType=float,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\activation.hpp(34): note: see reference to function template instantiation 'std::function<WeightType (WeightType)> &std::function<WeightType (WeightType)>::operator =<LogisticActivation<WeightType>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,double,void>(_Fx &&)' being compiled
          with
          [
              WeightType=float,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\activation.hpp(34): note: see reference to function template instantiation 'std::function<WeightType (WeightType)> &std::function<WeightType (WeightType)>::operator =<LogisticActivation<WeightType>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>,double,void>(_Fx &&)' being compiled
          with
          [
              WeightType=float,
              _Fx=LogisticActivation<float>::{ctor}::<lambda_4b238dcaee814ae02a85bd21e60a42e2>
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\activation.hpp(33): note: while compiling class template member function 'LogisticActivation<WeightType>::LogisticActivation(void)'
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(273): note: see reference to function template instantiation 'LogisticActivation<WeightType>::LogisticActivation(void)' being compiled
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(273): note: see reference to class template instantiation 'LogisticActivation<WeightType>' being compiled
          with
          [
              WeightType=float
          ]
  e:\users\allfather\projects\nemesis\nemesis\estimator\neuralnetwork\multilayerperceptron.hpp(251): note: while compiling class template member function 'void MLP<float,float,float>::load(const char *)'
  e:\users\allfather\projects\nemesis\examples\tdsineestimation\tdsineestimation.cpp(30): note: see reference to function template instantiation 'void MLP<float,float,float>::load(const char *)' being compiled
  TDSineEstimation.vcxproj -> E:\Users\AllFather\Projects\Nemesis\Examples\TDSineEstimation\Debug\TDSineEstimation.exe
  TDSineEstimation.vcxproj -> E:\Users\AllFather\Projects\Nemesis\Examples\TDSineEstimation\Debug\TDSineEstimation.pdb (Partial PDB)
